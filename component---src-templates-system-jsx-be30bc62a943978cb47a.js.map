{"version":3,"sources":["webpack:///./src/components/Tags.jsx","webpack:///./src/components/Suggestions.jsx","webpack:///./src/components/Button.jsx","webpack:///./src/templates/system.jsx"],"names":["TagsContainer","props","theme","tint","black","colors","light","borderRadius","default","darken","Tags","tags","map","tag","key","to","kebabCase","Row","ImageOverlay","transitions","duration","primary","dark","secondary","Wrapper","shadow","feature","small","boom","transition","hover","StyledLink","Link","Image","Title","white","base","text","Suggestions","left","right","src","frontmatter","cover","childImageSharp","resize","alt","title","fields","slug","defaultProps","Button","button","type","background","round","boxShadow","fontFamily","heading","propTypes","children","PropTypes","node","isRequired","oneOf","pulse","keyframes","breakpoints","m","s","Information","Note","System","pageContext","systemNode","data","markdownRemark","system","fluid","id","postPath","postNode","postSEO","className","hideS","category","timeToRead","date","input","html","aria-hidden","pageQuery"],"mappings":"mLAOMA,EAAa,sHAMD,SAACC,GAAD,OAAWA,EAAMC,MAAMC,KAAKC,QAN3B,WAON,SAACH,GAAD,OAAWA,EAAMC,MAAMG,OAAOD,MAAME,QAP9B,2DAUE,SAACL,GAAD,OAAWA,EAAMC,MAAMK,aAAaC,UAVtC,yEAcC,SAACP,GAAD,OAAWQ,YAAO,IAAMR,EAAMC,MAAMC,KAAKC,SAd1C,WAeJ,SAACH,GAAD,OAAWQ,YAAO,IAAMR,EAAMC,MAAMG,OAAOD,MAAME,SAf7C,OA+BJI,IAXF,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACX,YAACX,EAAD,KACGW,GACCA,EAAKC,KAAI,SAACC,GAAD,OACP,YAAC,OAAD,CAAMC,IAAKD,EAAKE,GAAE,SAAWC,IAAUH,IACrC,wBAAOA,U,4GC1BXI,EAAG,gKAQHC,EAAY,0DACC,SAACjB,GAAD,OAAWA,EAAMC,MAAMK,aAAaC,UADrC,4FASM,SAACP,GAAD,OAAWA,EAAMC,MAAMiB,YAAYX,QAAQY,WATjD,KAUd,SAACnB,GAAD,OACAA,EAAMoB,SAAN,uDAGEpB,EAAMC,MAAMG,OAAOgB,QAAQf,MAH7B,aAIEL,EAAMC,MAAMG,OAAOgB,QAAQC,KAJ7B,eAXc,KAiBd,SAACrB,GAAD,OACAA,EAAMsB,WAAN,uDAGEtB,EAAMC,MAAMG,OAAOkB,UAAUjB,MAH/B,aAIEL,EAAMC,MAAMG,OAAOkB,UAAUD,KAJ/B,eAlBc,KA0BZE,EAAO,4FAGM,SAACvB,GAAD,OAAWA,EAAMC,MAAMK,aAAaC,UAH1C,gBAIG,SAACP,GAAD,OAAWA,EAAMC,MAAMuB,OAAOC,QAAQC,MAAMnB,UAJ/C,gBAKG,SAACP,GAAD,OAAWA,EAAMC,MAAMiB,YAAYS,KAAKC,aAL3C,qCAQK,SAAC5B,GAAD,OAAWA,EAAMC,MAAMuB,OAAOC,QAAQC,MAAMG,QARjD,gCAUPZ,EAVO,kPA4BPa,EAAa,YAAOC,OAAP,sBAAH,8YA8BK9B,IAAMK,aAAaC,QA9BxB,uBA+BUN,IAAMiB,YAAYX,QAAQY,SA/BpC,kCAwCVa,EAAK,oIAQQ,SAAChC,GAAD,OAAWA,EAAMC,MAAMK,aAAaC,UAR5C,uBAUU,SAACP,GAAD,OAAWA,EAAMC,MAAMK,aAAaC,UAV9C,8CAiBL0B,EAAK,iDACA,SAACjC,GAAD,OAAWA,EAAMC,MAAMG,OAAO8B,MAAMC,OADpC,mDAIM,SAACnC,GAAD,OAAWA,EAAMC,MAAMuB,OAAOY,KAAKV,QAJzC,KAOLW,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,MAAOnB,EAAhB,EAAgBA,QAASE,EAAzB,EAAyBA,UAAzB,OAClB,YAACN,EAAD,KACGsB,GACC,YAACf,EAAD,KACE,YAACS,EAAD,KACE,mBAAKQ,IAAKF,EAAKG,YAAYC,MAAMC,gBAAgBC,OAAOJ,IAAKK,IAAKP,EAAKG,YAAYK,SAErF,YAAChB,EAAD,CAAYhB,GAAIwB,EAAKS,OAAOC,MAC1B,YAACf,EAAD,KAAQK,EAAKG,YAAYK,QAE3B,YAAC7B,EAAD,CAAcG,QAASA,EAASE,UAAWA,KAI9CiB,GACC,YAAChB,EAAD,KACE,YAACS,EAAD,KACE,mBAAKQ,IAAKD,EAAME,YAAYC,MAAMC,gBAAgBC,OAAOJ,IAAKK,IAAKN,EAAME,YAAYK,SAEvF,YAAChB,EAAD,CAAYhB,GAAIyB,EAAMQ,OAAOC,MAC3B,YAACf,EAAD,KAAQM,EAAME,YAAYK,QAE5B,YAAC7B,EAAD,CAAcG,QAASA,EAASE,UAAWA,OAMpCe,MASfA,EAAYY,aAAe,CACzB7B,SAAS,EACTE,WAAW,I,uECxKP4B,EAAM,0DACI,SAAClD,GAAD,OAAWA,EAAMC,MAAMkD,OAAOnD,EAAMoD,MAAMC,aAD9C,+BAGO,SAACrD,GAAD,OAAWA,EAAMC,MAAMK,aAAagD,QAH3C,gBAII,SAACtD,GAAD,OAAWA,EAAMC,MAAMkD,OAAOnD,EAAMoD,MAAMG,YAJ9C,WAKD,SAACvD,GAAD,OAAWA,EAAMC,MAAMG,OAAO8B,MAAMC,OALnC,gCAOK,SAACnC,GAAD,OAAWA,EAAMC,MAAMuD,WAAWC,UAPvC,kKAgBI,SAACzD,GAAD,OAAWA,EAAMC,MAAMiB,YAAYX,QAAQqB,aAhB/C,uHAuBM,SAAC5B,GAAD,OAAWA,EAAMC,MAAMkD,OAAOnD,EAAMoD,MAAMvB,MAAM0B,YAvBtD,iCA4BGL,MAEfA,EAAOQ,UAAY,CACjBC,SAAUC,IAAUC,KAAKC,WACzBV,KAAMQ,IAAUG,MAAM,CAAC,UAAW,eAGpCb,EAAOD,aAAe,CACpBG,KAAM,Y,grBCzBR,IAAMY,EAAQC,YAAH,KAmBL1C,EAAO,0IAOMyC,EAPN,sCAUU,SAAChE,GAAD,OAAWA,EAAMC,MAAMiE,YAAYC,IAV7C,0EAgBU,SAACnE,GAAD,OAAWA,EAAMC,MAAMiE,YAAYE,IAhB7C,wDAwBPC,EAAW,uEAEA,SAACrE,GAAD,OAAWA,EAAMC,MAAMuD,WAAWC,UAFlC,aAIJ,SAACzD,GAAD,OAAWA,EAAMC,MAAMG,OAAO8B,MAAMC,OAJhC,6FAQgB,SAACnC,GAAD,OAAWA,EAAMC,MAAMG,OAAO8B,MAAMC,OARpD,WASF,SAACnC,GAAD,OAAWA,EAAMC,MAAMG,OAAO8B,MAAMC,OATlC,oBAYF,SAACnC,GAAD,OAAWA,EAAMC,MAAMG,OAAO8B,MAAMC,OAZlC,OAiBXmC,EAAI,mFAgDKC,UAxCA,SAAC,GAAkF,IAAD,IAA/EC,YAAexB,EAAgE,EAAhEA,KAAMV,EAA0D,EAA1DA,KAAMC,EAAoD,EAApDA,MAAiCkC,EAAmB,EAA3CC,KAAQC,eACtDC,EAASH,EAAWhC,YAClBoC,EAAUD,EAAOlC,MAAMC,gBAAvBkC,MAKR,OAJKD,EAAOE,KACVF,EAAOE,GAAK9B,GAIZ,YAAC,IAAD,KACE,YAAC,IAAD,CAAK+B,SAAU/B,EAAMgC,SAAUP,EAAYQ,SAAO,IAClD,YAAC1D,EAAD,KACE,YAAC,IAAD,KACE,sBAAKqD,EAAO9B,OACZ,YAACuB,EAAD,KACE,oBAAMa,UAAWC,KAAjB,cACA,YAAC,OAAD,CAAMrE,GAAE,eAAiBC,IAAU6D,EAAOQ,WAAcR,EAAOQ,UAFjE,KAE0F,IACvFX,EAAWY,WAHd,mBAGgDT,EAAOU,OAGzD,YAAC,IAAD,MACA,YAAC,IAAD,CAAKT,MAAOA,KAEd,YAAC,IAAD,CAAWzB,KAAK,WACd,YAAC,IAAD,CAASmC,MAAOd,EAAWe,OAC3B,YAAC,IAAD,CAAMC,cAAY,SAClB,YAAC,IAAD,CAAM/E,KAAMkE,EAAOlE,OACnB,YAAC4D,EAAD,yCACoC,IAClC,YAAC,OAAD,CAAMxD,GAAE,eAAiBC,IAAU6D,EAAOQ,WAAcR,EAAOQ,YAGnE,YAAC,IAAD,KACE,YAAC,IAAD,wBACA,YAAC,IAAD,CAAa9C,KAAMA,EAAMC,MAAOA,EAAOjB,WAAS,KAElD,YAAC,IAAD,QAgBC,IAAMoE,EAAS","file":"component---src-templates-system-jsx-be30bc62a943978cb47a.js","sourcesContent":["import React from 'react';\nimport styled from '@emotion/styled';\nimport kebabCase from 'lodash/kebabCase';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport { darken } from 'polished';\n\nconst TagsContainer = styled.div`\n  margin: 1rem 0;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  a {\n    background: ${(props) => props.theme.tint.black};\n    color: ${(props) => props.theme.colors.black.light};\n    font-size: 0.9rem;\n    padding: 0.2rem 0.75rem;\n    border-radius: ${(props) => props.theme.borderRadius.default};\n    margin: 0.3rem 0.6rem 0.3rem 0;\n    white-space: nowrap;\n    &:hover {\n      background: ${(props) => darken(0.35, props.theme.tint.black)};\n      color: ${(props) => darken(0.35, props.theme.colors.black.light)};\n    }\n  }\n`;\n\nconst Tags = ({ tags }) => (\n  <TagsContainer>\n    {tags &&\n      tags.map((tag) => (\n        <Link key={tag} to={`/tags/${kebabCase(tag)}`}>\n          <span>{tag}</span>\n        </Link>\n      ))}\n  </TagsContainer>\n);\n\nexport default Tags;\n\nTags.propTypes = {\n  tags: PropTypes.array.isRequired,\n};\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport theme from '../../config/theme';\n\nconst Row = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  margin-top: 2rem;\n  margin-bottom: 1rem;\n`;\n\nconst ImageOverlay = styled.div`\n  border-radius: ${(props) => props.theme.borderRadius.default};\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  z-index: 2;\n  opacity: 0;\n  transition: opacity ${(props) => props.theme.transitions.default.duration};\n  ${(props) =>\n    props.primary &&\n    `background-image: linear-gradient(\n    30deg,\n    ${props.theme.colors.primary.light} 0%,\n    ${props.theme.colors.primary.dark} 100%\n  )`};\n  ${(props) =>\n    props.secondary &&\n    `background-image: linear-gradient(\n    30deg,\n    ${props.theme.colors.secondary.light} 0%,\n    ${props.theme.colors.secondary.dark} 100%\n  )`};\n`;\n\nconst Wrapper = styled.article`\n  position: relative;\n  z-index: 100;\n  border-radius: ${(props) => props.theme.borderRadius.default};\n  box-shadow: ${(props) => props.theme.shadow.feature.small.default};\n  transition: ${(props) => props.theme.transitions.boom.transition};\n  height: 15rem;\n  &:hover {\n    box-shadow: ${(props) => props.theme.shadow.feature.small.hover};\n    transform: translateY(-12px);\n    ${ImageOverlay} {\n      opacity: 0.9;\n    }\n  }\n  flex-basis: calc(99.9% * 1 / 2 - 1rem);\n  max-width: calc(99.9% * 1 / 2 - 1rem);\n  width: calc(99.9% * 1 / 2 - 1rem);\n  @media (max-width: 800px) {\n    flex-basis: 100%;\n    max-width: 100%;\n    width: 100%;\n    height: 12rem;\n    &:first-child {\n      margin-bottom: 2rem;\n    }\n  }\n`;\n\nconst StyledLink = styled(Link)`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 1rem;\n  z-index: 3;\n  &:after {\n    content: '';\n    position: absolute;\n    display: block;\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: linear-gradient(\n      to bottom,\n      rgba(0, 0, 0, 0) 0%,\n      rgba(0, 0, 0, 0.42) 35%,\n      rgba(0, 0, 0, 0.52) 50%,\n      rgba(0, 0, 0, 0.42) 65%,\n      rgba(0, 0, 0, 0) 100%\n    );\n    z-index: -10;\n    border-radius: ${theme.borderRadius.default};\n    transition: opacity ${theme.transitions.default.duration};\n  }\n  &:hover {\n    &:after {\n      opacity: 0;\n    }\n  }\n`;\n\nconst Image = styled.div`\n  position: absolute;\n  top: 0;\n  overflow: hidden;\n  right: 0;\n  left: 0;\n  bottom: 0;\n  z-index: 1;\n  border-radius: ${(props) => props.theme.borderRadius.default};\n  img {\n    border-radius: ${(props) => props.theme.borderRadius.default};\n    object-fit: cover;\n    width: 100%;\n    height: 100%;\n  }\n`;\n\nconst Title = styled.h4`\n  color: ${(props) => props.theme.colors.white.base};\n  text-align: center;\n  margin-bottom: 0;\n  text-shadow: ${(props) => props.theme.shadow.text.small};\n`;\n\nconst Suggestions = ({ left, right, primary, secondary }) => (\n  <Row>\n    {left && (\n      <Wrapper>\n        <Image>\n          <img src={left.frontmatter.cover.childImageSharp.resize.src} alt={left.frontmatter.title} />\n        </Image>\n        <StyledLink to={left.fields.slug}>\n          <Title>{left.frontmatter.title}</Title>\n        </StyledLink>\n        <ImageOverlay primary={primary} secondary={secondary} />\n      </Wrapper>\n    )}\n\n    {right && (\n      <Wrapper>\n        <Image>\n          <img src={right.frontmatter.cover.childImageSharp.resize.src} alt={right.frontmatter.title} />\n        </Image>\n        <StyledLink to={right.fields.slug}>\n          <Title>{right.frontmatter.title}</Title>\n        </StyledLink>\n        <ImageOverlay primary={primary} secondary={secondary} />\n      </Wrapper>\n    )}\n  </Row>\n);\n\nexport default Suggestions;\n\nSuggestions.propTypes = {\n  left: PropTypes.any.isRequired,\n  right: PropTypes.any.isRequired,\n  primary: PropTypes.bool,\n  secondary: PropTypes.bool,\n};\n\nSuggestions.defaultProps = {\n  primary: true,\n  secondary: false,\n};\n","import styled from '@emotion/styled';\nimport PropTypes from 'prop-types';\n\nconst Button = styled.button`\n  background: ${(props) => props.theme.button[props.type].background};\n  border: none;\n  border-radius: ${(props) => props.theme.borderRadius.round};\n  box-shadow: ${(props) => props.theme.button[props.type].boxShadow};\n  color: ${(props) => props.theme.colors.white.base};\n  cursor: pointer;\n  font-family: ${(props) => props.theme.fontFamily.heading};\n  display: inline-block;\n  font-size: 1.5rem;\n  font-weight: 700;\n  line-height: 1.25;\n  margin: 2rem auto;\n  min-width: 10rem;\n  padding: 1.15rem 2.45rem;\n  text-align: center;\n  transition: ${(props) => props.theme.transitions.default.transition};\n  user-select: none;\n  vertical-align: middle;\n  white-space: nowrap;\n  z-index: 10;\n  -webkit-appearance: button;\n  &:hover {\n    box-shadow: ${(props) => props.theme.button[props.type].hover.boxShadow};\n    transform: translateY(-8px);\n  }\n`;\n\nexport default Button;\n\nButton.propTypes = {\n  children: PropTypes.node.isRequired,\n  type: PropTypes.oneOf(['primary', 'secondary']),\n};\n\nButton.defaultProps = {\n  type: 'default',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from '@emotion/styled';\nimport { keyframes, css } from '@emotion/core';\nimport Img from 'gatsby-image';\nimport { Link, graphql } from 'gatsby';\nimport kebabCase from 'lodash/kebabCase';\nimport { SEO, Container, Content, Wave, Line, Layout } from '../elements';\nimport { hideS, Hero, InfoText } from '../utilities';\nimport Tags from '../components/Tags';\nimport Suggestions from '../components/Suggestions';\nimport Button from '../components/Button';\nimport Footer from '../components/Footer';\n\nconst pulse = keyframes`\n  0% {\n    transform: scale(1);\n    animation-timing-function: ease-in;\n  }\n  25% {\n    animation-timing-function: ease-out;\n    transform: scale(1.05);\n  }\n  50% {\n    transform: scale(1.12);\n    animation-timing-function: ease-in;\n  }\n  to {\n    transform: scale(1);\n    animation-timing-function: ease-out;\n  }\n`;\n\nconst Wrapper = styled.div`\n  height: 600px;\n  position: relative;\n  overflow: hidden;\n  .gatsby-image-wrapper {\n    height: 600px;\n    img {\n      animation: ${pulse} 30s infinite;\n    }\n  }\n  @media (max-width: ${(props) => props.theme.breakpoints.m}) {\n    height: 500px;\n    .gatsby-image-wrapper {\n      height: 500px;\n    }\n  }\n  @media (max-width: ${(props) => props.theme.breakpoints.s}) {\n    height: 400px;\n    .gatsby-image-wrapper {\n      height: 400px;\n    }\n  }\n`;\n\nconst Information = styled.div`\n  margin-top: 2rem;\n  font-family: ${(props) => props.theme.fontFamily.heading};\n  a {\n    color: ${(props) => props.theme.colors.white.base};\n    transition: all 0.4s;\n    border-bottom: 1px solid transparent;\n    &:hover {\n      border-bottom: 1px solid ${(props) => props.theme.colors.white.base};\n      color: ${(props) => props.theme.colors.white.base};\n    }\n    &:focus {\n      color: ${(props) => props.theme.colors.white.base};\n    }\n  }\n`;\n\nconst Note = styled.p`\n  margin-bottom: 4rem;\n`;\n\nconst fontBold = css`\n  font-weight: 700;\n`;\n\nconst System = ({ pageContext: { slug, left, right }, data: { markdownRemark: systemNode } }) => {\n  const system = systemNode.frontmatter;\n  const { fluid } = system.cover.childImageSharp;\n  if (!system.id) {\n    system.id = slug;\n  }\n\n  return (\n    <Layout>\n      <SEO postPath={slug} postNode={systemNode} postSEO />\n      <Wrapper>\n        <Hero>\n          <h1>{system.title}</h1>\n          <Information>\n            <span className={hideS}>Category: </span>\n            <Link to={`/categories/${kebabCase(system.category)}`}>{system.category}</Link> &mdash;{' '}\n            {systemNode.timeToRead} Minutes Read &mdash; {system.date}\n          </Information>\n        </Hero>\n        <Wave />\n        <Img fluid={fluid} />\n      </Wrapper>\n      <Container type=\"article\">\n        <Content input={systemNode.html} />\n        <Line aria-hidden=\"true\" />\n        <Tags tags={system.tags} />\n        <Note>\n          Read all posts from this category{' '}\n          <Link to={`/categories/${kebabCase(system.category)}`}>{system.category}</Link>\n        </Note>\n      </Container>\n      <Container>\n        <InfoText>Related Reading</InfoText>\n        <Suggestions left={left} right={right} secondary />\n      </Container>\n      <Footer />\n    </Layout>\n  );\n};\n\nexport default System;\n\nSystem.propTypes = {\n  pageContext: PropTypes.shape({\n    slug: PropTypes.string.isRequired,\n  }).isRequired,\n  data: PropTypes.shape({\n    markdownRemark: PropTypes.object.isRequired,\n  }).isRequired,\n};\n\nexport const pageQuery = graphql`\n  query SystemPostBySlug($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      timeToRead\n      excerpt\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\", locale: \"en\")\n        category\n        tags\n        cover {\n          childImageSharp {\n            fluid(maxWidth: 1920, quality: 90, duotone: { highlight: \"#EE9338\", shadow: \"#BE7123\" }) {\n              ...GatsbyImageSharpFluid_withWebp\n            }\n            resize(width: 1200, quality: 90) {\n              src\n            }\n          }\n        }\n      }\n      fields {\n        slug\n        sourceInstanceName\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}