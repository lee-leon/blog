{"version":3,"sources":["webpack:///./src/pages/system.jsx","webpack:///./src/components/Header.jsx","webpack:///./src/components/ItemBlog.jsx"],"names":["Base","Object","react_emotion__WEBPACK_IMPORTED_MODULE_3__","b","target","System","_ref","edges","data","allMarkdownRemark","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","elements__WEBPACK_IMPORTED_MODULE_4__","c","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","title","_config_website__WEBPACK_IMPORTED_MODULE_5___default","siteTitle","_components_Header__WEBPACK_IMPORTED_MODULE_8__","type","map","system","_components_ItemBlog__WEBPACK_IMPORTED_MODULE_6__","key","node","frontmatter","path","fields","slug","cover","childImageSharp","fluid","date","category","timeToRead","excerpt","tags","_components_Footer__WEBPACK_IMPORTED_MODULE_7__","__webpack_exports__","default","g","propTypes","prop_types__WEBPACK_IMPORTED_MODULE_1___default","shape","array","isRequired","pageQuery","Wrapper","react_emotion__WEBPACK_IMPORTED_MODULE_2__","props","theme","gradient","rightToLeft","big","breakpoints","m","s","Text","colors","white","base","layout","Subtitle","blue","Header","children","react__WEBPACK_IMPORTED_MODULE_1___default","f","u","prop_types__WEBPACK_IMPORTED_MODULE_3___default","any","oneOfType","string","object","bool","defaultProps","311","e","t","r","n","i","o","l","d","h","Image","shadow","feature","small","transitions","boom","transition","borderRadius","hover","Information","black","duration","primary","Statistics","lighter","Excerpt","ItemBlog","gatsby__WEBPACK_IMPORTED_MODULE_4__","to","gatsby_image__WEBPACK_IMPORTED_MODULE_5___default","className","utilities__WEBPACK_IMPORTED_MODULE_7__","lodash_kebabCase__WEBPACK_IMPORTED_MODULE_6___default","w","prop_types__WEBPACK_IMPORTED_MODULE_2___default","number"],"mappings":"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","file":"component---src-pages-system-jsx-a1e1fa5fa5f9317c8c65.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql } from 'gatsby';\nimport Helmet from 'react-helmet';\nimport styled from 'react-emotion';\nimport { Container, Layout } from 'elements';\nimport config from '../../config/website';\nimport ItemBlog from '../components/ItemBlog';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\n\nconst Base = styled.div`\n  margin-top: 2.5rem;\n  margin-bottom: 2.5rem;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst System = ({\n  data: {\n    allMarkdownRemark: { edges },\n  },\n}) => (\n  <Layout>\n    <Helmet title={`System Design | ${config.siteTitle}`} />\n    <Header title=\"Distributed System Design\">\n      Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.\n    </Header>\n    <Container type=\"big\">\n      <Base>\n        {edges.map(system => (\n          <ItemBlog\n            key={system.node.frontmatter.title}\n            path={system.node.fields.slug}\n            cover={system.node.frontmatter.cover.childImageSharp.fluid}\n            title={system.node.frontmatter.title}\n            date={system.node.frontmatter.date}\n            category={system.node.frontmatter.category}\n            timeToRead={system.node.timeToRead}\n            excerpt={system.node.excerpt}\n            tags={system.node.frontmatter.tags}\n          />\n        ))}\n      </Base>\n    </Container>\n    <Footer />\n  </Layout>\n);\n\nexport default System;\n\nSystem.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      edges: PropTypes.array.isRequired,\n    }),\n  }).isRequired,\n};\n\nexport const pageQuery = graphql`\n  query SystemQuery {\n    allMarkdownRemark(\n      limit: 1000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { fields: { sourceInstanceName: { eq: \"system\" } } }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          excerpt(pruneLength: 300)\n          timeToRead\n          frontmatter {\n            title\n            date(formatString: \"DD. MMMM YYYY\", locale: \"de\")\n            category\n            tags\n            cover {\n              childImageSharp {\n                fluid(maxWidth: 900, quality: 85, traceSVG: { color: \"#2B2B2F\" }) {\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport styled from 'react-emotion';\nimport PropTypes from 'prop-types';\nimport { Wave } from 'elements';\n\nconst Wrapper = styled.header`\n  background: ${props => props.theme.gradient.rightToLeft};\n  height: ${props => (props.big ? '650px' : '450px')};\n  @media (max-width: ${props => props.theme.breakpoints.m}) {\n    height: ${props => (props.big ? '600px' : '400px')};\n  }\n  @media (max-width: ${props => props.theme.breakpoints.s}) {\n    height: ${props => (props.big ? '500px' : '325px')};\n  }\n  position: relative;\n  overflow: hidden;\n`;\n\nconst Text = styled.div`\n  color: ${props => props.theme.colors.white.base};\n  z-index: 1000;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  width: 100%;\n  max-width: ${props => props.theme.layout.base};\n  padding: 0 2rem;\n  margin-bottom: 7rem;\n  align-items: center;\n`;\n\nconst Subtitle = styled.p`\n  max-width: 650px;\n  color: ${props => props.theme.colors.white.blue};\n`;\n\nconst Header = ({ children, title, big }) => (\n  <Wrapper big={big}>\n    <Text>\n      <h1>{title}</h1>\n      {children && <Subtitle>{children}</Subtitle>}\n    </Text>\n    <Wave />\n  </Wrapper>\n);\n\nexport default Header;\n\nHeader.propTypes = {\n  children: PropTypes.any,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\n  big: PropTypes.bool,\n};\n\nHeader.defaultProps = {\n  big: false,\n  children: false,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'react-emotion';\nimport {Link} from 'gatsby';\nimport Img from 'gatsby-image';\nimport kebabCase from 'lodash/kebabCase';\nimport { hideS } from 'utilities';\n\nconst Wrapper = styled.article`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  margin-bottom: 4rem;\n`;\n\nconst Image = styled.div`\n  position: relative;\n  box-shadow: ${props => props.theme.shadow.feature.small.default};\n  transition: ${props => props.theme.transitions.boom.transition};\n  border-radius: ${props => props.theme.borderRadius.default};\n  min-height: 300px;\n  img {\n    border-radius: ${props => props.theme.borderRadius.default};\n  }\n  &:hover {\n    box-shadow: ${props => props.theme.shadow.feature.small.hover};\n    transform: translateY(-12px);\n  }\n  a {\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    > div {\n      position: static !important;\n    }\n    > div > div {\n      position: static !important;\n    }\n  }\n  flex-basis: calc(99.9% * 2 / 5 - 1rem);\n  max-width: calc(99.9% * 2 / 5 - 1rem);\n  width: calc(99.9% * 2 / 5 - 1rem);\n  @media (max-width: 800px) {\n    flex-basis: 100%;\n    max-width: 100%;\n    width: 100%;\n    margin-bottom: 1.5rem;\n  }\n  @media (max-width: 500px) {\n    min-height: 200px;\n  }\n`;\n\nconst Information = styled.div`\n  h1 {\n    font-size: 2rem;\n    margin-bottom: 1.25rem;\n    display: inline-block;\n    color: ${props => props.theme.colors.black.base};\n    transition: all ${props => props.theme.transitions.default.duration};\n    &:hover {\n      color: ${props => props.theme.colors.primary.base};\n    }\n  }\n\n  flex-basis: calc(99.9% * 3 / 5 - 1rem);\n  max-width: calc(99.9% * 3 / 5 - 1rem);\n  width: calc(99.9% * 3 / 5 - 1rem);\n  @media (max-width: 800px) {\n    flex-basis: 100%;\n    max-width: 100%;\n    width: 100%;\n  }\n`;\n\nconst Statistics = styled.div`\n  color: ${props => props.theme.colors.black.lighter};\n`;\n\nconst Excerpt = styled.div`\n  margin-top: 2rem;\n`;\n\nconst ItemBlog = ({ path, cover, category, title, date, timeToRead, excerpt }) => (\n  <Wrapper>\n    <Image>\n      <Link to={path}>\n        <Img fluid={cover} />\n      </Link>\n    </Image>\n    <Information>\n      <Link to={path}>\n        <h1>{title}</h1>\n      </Link>\n      <Statistics>\n        {date} &mdash; Lesezeit: {timeToRead} Min. &mdash; <span className={hideS}>Kategorie: </span>\n        <Link to={`/categories/${kebabCase(category)}`}>{category}</Link>\n      </Statistics>\n      <Excerpt>{excerpt}</Excerpt>\n    </Information>\n  </Wrapper>\n);\n\nexport default ItemBlog;\n\nItemBlog.propTypes = {\n  path: PropTypes.string.isRequired,\n  cover: PropTypes.any.isRequired,\n  category: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  timeToRead: PropTypes.number.isRequired,\n  excerpt: PropTypes.string.isRequired,\n};\n"],"sourceRoot":""}