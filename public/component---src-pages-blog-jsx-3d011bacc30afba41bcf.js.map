{"version":3,"sources":["webpack:///./src/components/ItemBlog.jsx","webpack:///./src/pages/blog.jsx","webpack:///./src/components/Header.jsx"],"names":["Wrapper","Object","index_esm","b","target","Image","props","theme","shadow","feature","small","default","transitions","boom","transition","borderRadius","hover","Information","colors","black","base","duration","primary","Statistics","lighter","Excerpt","ItemBlog_ItemBlog","_ref","path","cover","category","title","date","timeToRead","excerpt","react_default","a","createElement","gatsby_browser_entry","to","gatsby_image_default","fluid","className","utilities","d","kebabCase_default","components_ItemBlog","k","propTypes","prop_types_default","string","isRequired","any","number","Base","blog_Blog","edges","data","allMarkdownRemark","src_elements","c","Helmet_default","website_default","siteTitle","Header","type","map","post","key","node","frontmatter","fields","slug","childImageSharp","tags","Footer","__webpack_exports__","z","shape","array","pageQuery","react_emotion__WEBPACK_IMPORTED_MODULE_2__","gradient","rightToLeft","big","breakpoints","m","s","Text","white","layout","Subtitle","blue","children","react__WEBPACK_IMPORTED_MODULE_1___default","elements__WEBPACK_IMPORTED_MODULE_4__","f","prop_types__WEBPACK_IMPORTED_MODULE_3___default","oneOfType","object","bool","defaultProps"],"mappings":"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","file":"component---src-pages-blog-jsx-3d011bacc30afba41bcf.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'react-emotion';\nimport {Link} from 'gatsby';\nimport Img from 'gatsby-image';\nimport kebabCase from 'lodash/kebabCase';\nimport { hideS } from 'utilities';\n\nconst Wrapper = styled.article`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  margin-bottom: 4rem;\n`;\n\nconst Image = styled.div`\n  position: relative;\n  box-shadow: ${props => props.theme.shadow.feature.small.default};\n  transition: ${props => props.theme.transitions.boom.transition};\n  border-radius: ${props => props.theme.borderRadius.default};\n  min-height: 300px;\n  img {\n    border-radius: ${props => props.theme.borderRadius.default};\n  }\n  &:hover {\n    box-shadow: ${props => props.theme.shadow.feature.small.hover};\n    transform: translateY(-12px);\n  }\n  a {\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    > div {\n      position: static !important;\n    }\n    > div > div {\n      position: static !important;\n    }\n  }\n  flex-basis: calc(99.9% * 2 / 5 - 1rem);\n  max-width: calc(99.9% * 2 / 5 - 1rem);\n  width: calc(99.9% * 2 / 5 - 1rem);\n  @media (max-width: 800px) {\n    flex-basis: 100%;\n    max-width: 100%;\n    width: 100%;\n    margin-bottom: 1.5rem;\n  }\n  @media (max-width: 500px) {\n    min-height: 200px;\n  }\n`;\n\nconst Information = styled.div`\n  h1 {\n    font-size: 2rem;\n    margin-bottom: 1.25rem;\n    display: inline-block;\n    color: ${props => props.theme.colors.black.base};\n    transition: all ${props => props.theme.transitions.default.duration};\n    &:hover {\n      color: ${props => props.theme.colors.primary.base};\n    }\n  }\n\n  flex-basis: calc(99.9% * 3 / 5 - 1rem);\n  max-width: calc(99.9% * 3 / 5 - 1rem);\n  width: calc(99.9% * 3 / 5 - 1rem);\n  @media (max-width: 800px) {\n    flex-basis: 100%;\n    max-width: 100%;\n    width: 100%;\n  }\n`;\n\nconst Statistics = styled.div`\n  color: ${props => props.theme.colors.black.lighter};\n`;\n\nconst Excerpt = styled.div`\n  margin-top: 2rem;\n`;\n\nconst ItemBlog = ({ path, cover, category, title, date, timeToRead, excerpt }) => (\n  <Wrapper>\n    <Image>\n      <Link to={path}>\n        <Img fluid={cover} />\n      </Link>\n    </Image>\n    <Information>\n      <Link to={path}>\n        <h1>{title}</h1>\n      </Link>\n      <Statistics>\n        {date} &mdash; Lesezeit: {timeToRead} Min. &mdash; <span className={hideS}>Kategorie: </span>\n        <Link to={`/categories/${kebabCase(category)}`}>{category}</Link>\n      </Statistics>\n      <Excerpt>{excerpt}</Excerpt>\n    </Information>\n  </Wrapper>\n);\n\nexport default ItemBlog;\n\nItemBlog.propTypes = {\n  path: PropTypes.string.isRequired,\n  cover: PropTypes.any.isRequired,\n  category: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  timeToRead: PropTypes.number.isRequired,\n  excerpt: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql } from 'gatsby';\nimport Helmet from 'react-helmet';\nimport styled from 'react-emotion';\nimport { Container, Layout } from 'elements';\nimport config from '../../config/website';\nimport ItemBlog from '../components/ItemBlog';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\n\nconst Base = styled.div`\n  margin-top: 2.5rem;\n  margin-bottom: 2.5rem;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Blog = ({\n  data: {\n    allMarkdownRemark: { edges },\n  },\n}) => (\n  <Layout>\n    <Helmet title={`Blog | ${config.siteTitle}`} />\n    <Header title=\"Blog\">Ein bunter Mix aus Ãœberlegungen, Tutorials und Neuigkeiten</Header>\n    <Container type=\"big\">\n      <Base>\n        {edges.map(post => (\n          <ItemBlog\n            key={post.node.frontmatter.title}\n            path={post.node.fields.slug}\n            cover={post.node.frontmatter.cover.childImageSharp.fluid}\n            title={post.node.frontmatter.title}\n            date={post.node.frontmatter.date}\n            category={post.node.frontmatter.category}\n            timeToRead={post.node.timeToRead}\n            excerpt={post.node.excerpt}\n            tags={post.node.frontmatter.tags}\n          />\n        ))}\n      </Base>\n    </Container>\n    <Footer />\n  </Layout>\n);\n\nexport default Blog;\n\nBlog.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      edges: PropTypes.array.isRequired,\n    }),\n  }).isRequired,\n};\n\nexport const pageQuery = graphql`\n  query BlogQuery {\n    allMarkdownRemark(\n      limit: 1000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { fields: { sourceInstanceName: { eq: \"blog\" } } }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          excerpt(pruneLength: 300)\n          timeToRead\n          frontmatter {\n            title\n            date(formatString: \"DD. MMMM YYYY\", locale: \"de\")\n            category\n            tags\n            cover {\n              childImageSharp {\n                fluid(maxWidth: 900, quality: 85, traceSVG: { color: \"#2B2B2F\" }) {\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport styled from 'react-emotion';\nimport PropTypes from 'prop-types';\nimport { Wave } from 'elements';\n\nconst Wrapper = styled.header`\n  background: ${props => props.theme.gradient.rightToLeft};\n  height: ${props => (props.big ? '650px' : '450px')};\n  @media (max-width: ${props => props.theme.breakpoints.m}) {\n    height: ${props => (props.big ? '600px' : '400px')};\n  }\n  @media (max-width: ${props => props.theme.breakpoints.s}) {\n    height: ${props => (props.big ? '500px' : '325px')};\n  }\n  position: relative;\n  overflow: hidden;\n`;\n\nconst Text = styled.div`\n  color: ${props => props.theme.colors.white.base};\n  z-index: 1000;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  width: 100%;\n  max-width: ${props => props.theme.layout.base};\n  padding: 0 2rem;\n  margin-bottom: 7rem;\n  align-items: center;\n`;\n\nconst Subtitle = styled.p`\n  max-width: 650px;\n  color: ${props => props.theme.colors.white.blue};\n`;\n\nconst Header = ({ children, title, big }) => (\n  <Wrapper big={big}>\n    <Text>\n      <h1>{title}</h1>\n      {children && <Subtitle>{children}</Subtitle>}\n    </Text>\n    <Wave />\n  </Wrapper>\n);\n\nexport default Header;\n\nHeader.propTypes = {\n  children: PropTypes.any,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\n  big: PropTypes.bool,\n};\n\nHeader.defaultProps = {\n  big: false,\n  children: false,\n};\n"],"sourceRoot":""}