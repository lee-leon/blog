{"version":3,"sources":["webpack:///./src/templates/system.jsx","webpack:///./src/components/Tags.jsx"],"names":["pulse","Object","react_emotion__WEBPACK_IMPORTED_MODULE_2__","c","Wrapper","b","target","props","theme","breakpoints","m","s","Information","fontFamily","heading","colors","white","base","Note","fontBold","a","System","_ref","_ref$pageContext","pageContext","slug","left","right","systemNode","data","markdownRemark","system","frontmatter","fluid","cover","childImageSharp","id","react__WEBPACK_IMPORTED_MODULE_0___default","createElement","elements__WEBPACK_IMPORTED_MODULE_6__","e","postPath","postNode","postSEO","utilities__WEBPACK_IMPORTED_MODULE_7__","title","date","timeToRead","className","d","gatsby__WEBPACK_IMPORTED_MODULE_4__","Link","to","lodash_kebabCase__WEBPACK_IMPORTED_MODULE_5___default","category","f","gatsby_image__WEBPACK_IMPORTED_MODULE_3___default","type","input","html","aria-hidden","_components_Tags__WEBPACK_IMPORTED_MODULE_8__","tags","_components_Suggestions__WEBPACK_IMPORTED_MODULE_9__","secondary","_components_Footer__WEBPACK_IMPORTED_MODULE_11__","href","rel","_components_Button__WEBPACK_IMPORTED_MODULE_10__","__webpack_exports__","default","j","propTypes","prop_types__WEBPACK_IMPORTED_MODULE_1___default","shape","string","isRequired","object","pageQuery","TagsContainer","react_emotion__WEBPACK_IMPORTED_MODULE_1__","tint","black","light","borderRadius","polished__WEBPACK_IMPORTED_MODULE_5__","Tags","map","tag","key","lodash_kebabCase__WEBPACK_IMPORTED_MODULE_2___default","prop_types__WEBPACK_IMPORTED_MODULE_3___default","array"],"mappings":"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","file":"component---src-templates-system-jsx-d3f39419445d33569577.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { keyframes, css } from 'react-emotion';\nimport Img from 'gatsby-image';\nimport { Link, graphql } from 'gatsby';\nimport kebabCase from 'lodash/kebabCase';\nimport { SEO, Container, Content, Wave, Line, Layout } from 'elements';\nimport { hideS, Hero, InfoText } from 'utilities';\nimport Tags from '../components/Tags';\nimport Suggestions from '../components/Suggestions';\nimport Button from '../components/Button';\nimport Footer from '../components/Footer';\n\nconst pulse = keyframes`\n  0% {\n    transform: scale(1);\n    animation-timing-function: ease-in;\n  }\n  25% {\n    animation-timing-function: ease-out;\n    transform: scale(1.05);\n  }\n  50% {\n    transform: scale(1.12);\n    animation-timing-function: ease-in;\n  }\n  to {\n    transform: scale(1);\n    animation-timing-function: ease-out;\n  }\n`;\n\nconst Wrapper = styled.div`\n  height: 600px;\n  position: relative;\n  overflow: hidden;\n  .gatsby-image-wrapper {\n    height: 600px;\n    img {\n      animation: ${pulse} 30s infinite;\n    }\n  }\n  @media (max-width: ${props => props.theme.breakpoints.m}) {\n    height: 500px;\n    .gatsby-image-wrapper {\n      height: 500px;\n    }\n  }\n  @media (max-width: ${props => props.theme.breakpoints.s}) {\n    height: 400px;\n    .gatsby-image-wrapper {\n      height: 400px;\n    }\n  }\n`;\n\nconst Information = styled.div`\n  margin-top: 2rem;\n  font-family: ${props => props.theme.fontFamily.heading};\n  a {\n    color: ${props => props.theme.colors.white.base};\n    transition: all 0.4s;\n    border-bottom: 1px solid transparent;\n    &:hover {\n      border-bottom: 1px solid ${props => props.theme.colors.white.base};\n      color: ${props => props.theme.colors.white.base};\n    }\n    &:focus {\n      color: ${props => props.theme.colors.white.base};\n    }\n  }\n`;\n\nconst Note = styled.p`\n  margin-bottom: 4rem;\n`;\n\nconst fontBold = css`\n  font-weight: 700;\n`;\n\nconst System = ({ pageContext: { slug, left, right }, data: { markdownRemark: systemNode } }) => {\n  const system = systemNode.frontmatter;\n  const { fluid } = system.cover.childImageSharp;\n  if (!system.id) {\n    system.id = slug;\n  }\n\n  return (\n    <Layout>\n      <SEO postPath={slug} postNode={systemNode} postSEO />\n      <Wrapper>\n        <Hero>\n          <h1>{system.title}</h1>\n          <Information>\n            {system.date} &mdash; Lesezeit: {systemNode.timeToRead} Min. &mdash; <span className={hideS}>Kategorie: </span>\n            <Link to={`/categories/${kebabCase(system.category)}`}>{system.category}</Link>\n          </Information>\n        </Hero>\n        <Wave />\n        <Img fluid={fluid} />\n      </Wrapper>\n      <Container type=\"article\">\n        <Content input={systemNode.html} />\n        <Line aria-hidden=\"true\" />\n        <Tags tags={system.tags} />\n        <Note>\n          <span className={fontBold}>Interesse geweckt?</span> Lies alle Beiträge in der Kategorie{' '}\n          <Link to={`/categories/${kebabCase(system.category)}`}>{system.category}</Link>\n        </Note>\n      </Container>\n      <Container>\n        <InfoText>Weitere Blogeinträge</InfoText>\n        <Suggestions left={left} right={right} secondary />\n      </Container>\n      <Footer>\n        <h2>Lust auf mehr Tutorials & Goodies? Werde ein Patron.</h2>\n        <a href=\"https://www.patreon.com/lekoarts\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <Button type=\"secondary\">Patreon</Button>\n        </a>\n      </Footer>\n    </Layout>\n  );\n};\n\nexport default System;\n\nSystem.propTypes = {\n  pageContext: PropTypes.shape({\n    slug: PropTypes.string.isRequired,\n  }).isRequired,\n  data: PropTypes.shape({\n    markdownRemark: PropTypes.object.isRequired,\n  }).isRequired,\n};\n\nexport const pageQuery = graphql`\n  query SystemPostBySlug($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      timeToRead\n      excerpt\n      frontmatter {\n        title\n        date(formatString: \"DD. MMMM YYYY\", locale: \"de\")\n        category\n        tags\n        cover {\n          childImageSharp {\n            fluid(maxWidth: 1920, quality: 90, duotone: { highlight: \"#EE9338\", shadow: \"#BE7123\" }) {\n              ...GatsbyImageSharpFluid_withWebp\n            }\n            resize(width: 1200, quality: 90) {\n              src\n            }\n          }\n        }\n      }\n      fields {\n        slug\n        sourceInstanceName\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport styled from 'react-emotion';\nimport kebabCase from 'lodash/kebabCase';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport { darken } from 'polished';\n\nconst TagsContainer = styled.div`\n  margin: 1rem 0;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  a {\n    background: ${props => props.theme.tint.black};\n    color: ${props => props.theme.colors.black.light};\n    font-size: 0.9rem;\n    padding: 0.2rem 0.75rem;\n    border-radius: ${props => props.theme.borderRadius.default};\n    margin: 0.3rem 0.6rem 0.3rem 0;\n    white-space: nowrap;\n    &:hover {\n      background: ${props => darken(0.35, props.theme.tint.black)};\n      color: ${props => darken(0.35, props.theme.colors.black.light)};\n    }\n  }\n`;\n\nconst Tags = ({ tags }) => (\n  <TagsContainer>\n    {tags &&\n      tags.map(tag => (\n        <Link key={tag} to={`/tags/${kebabCase(tag)}`}>\n          <span>{tag}</span>\n        </Link>\n      ))}\n  </TagsContainer>\n);\n\nexport default Tags;\n\nTags.propTypes = {\n  tags: PropTypes.array.isRequired,\n};\n"],"sourceRoot":""}