{"version":3,"sources":["webpack:///./src/pages/algorithm.jsx","webpack:///./src/components/ItemBlog.jsx"],"names":["Base","Object","react_emotion__WEBPACK_IMPORTED_MODULE_3__","b","target","Algorithm","_ref","edges","data","allMarkdownRemark","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","elements__WEBPACK_IMPORTED_MODULE_4__","c","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","title","_config_website__WEBPACK_IMPORTED_MODULE_5___default","siteTitle","_components_Header__WEBPACK_IMPORTED_MODULE_8__","type","map","algorithm","_components_ItemBlog__WEBPACK_IMPORTED_MODULE_6__","key","node","frontmatter","path","fields","slug","cover","childImageSharp","fluid","date","category","timeToRead","excerpt","tags","_components_Footer__WEBPACK_IMPORTED_MODULE_7__","__webpack_exports__","default","g","propTypes","prop_types__WEBPACK_IMPORTED_MODULE_1___default","shape","array","isRequired","pageQuery","Wrapper","Image","props","theme","shadow","feature","small","transitions","boom","transition","borderRadius","hover","Information","colors","black","base","duration","primary","Statistics","lighter","Excerpt","ItemBlog","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","Link","to","gatsby_image__WEBPACK_IMPORTED_MODULE_5___default","className","utilities__WEBPACK_IMPORTED_MODULE_7__","d","lodash_kebabCase__WEBPACK_IMPORTED_MODULE_6___default","x","prop_types__WEBPACK_IMPORTED_MODULE_2___default","string","any","number"],"mappings":"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","file":"component---src-pages-algorithm-jsx-3ed85cebcb996f69f5fb.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql } from 'gatsby';\nimport Helmet from 'react-helmet';\nimport styled from 'react-emotion';\nimport { Container, Layout } from 'elements';\nimport config from '../../config/website';\nimport ItemBlog from '../components/ItemBlog';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\n\nconst Base = styled.div`\n  margin-top: 2.5rem;\n  margin-bottom: 2.5rem;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Algorithm = ({\n  data: {\n    allMarkdownRemark: { edges },\n  },\n}) => (\n  <Layout>\n    <Helmet title={`Algorithm | ${config.siteTitle}`} />\n    <Header title=\"Advanced Data Structure & Algorithms\" />\n    <Container type=\"big\">\n      <Base>\n        {edges.map(algorithm => (\n          <ItemBlog\n            key={algorithm.node.frontmatter.title}\n            path={algorithm.node.fields.slug}\n            cover={algorithm.node.frontmatter.cover.childImageSharp.fluid}\n            title={algorithm.node.frontmatter.title}\n            date={algorithm.node.frontmatter.date}\n            category={algorithm.node.frontmatter.category}\n            timeToRead={algorithm.node.timeToRead}\n            excerpt={algorithm.node.excerpt}\n            tags={algorithm.node.frontmatter.tags}\n          />\n        ))}\n      </Base>\n    </Container>\n    <Footer />\n  </Layout>\n);\n\nexport default Algorithm;\n\nAlgorithm.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      edges: PropTypes.array.isRequired,\n    }),\n  }).isRequired,\n};\n\nexport const pageQuery = graphql`\n  query AlgorithmQuery {\n    allMarkdownRemark(\n      limit: 1000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { fields: { sourceInstanceName: { eq: \"algorithm\" } } }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          excerpt(pruneLength: 300)\n          timeToRead\n          frontmatter {\n            title\n            date(formatString: \"DD. MMMM YYYY\", locale: \"de\")\n            category\n            tags\n            cover {\n              childImageSharp {\n                fluid(maxWidth: 900, quality: 85, traceSVG: { color: \"#2B2B2F\" }) {\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'react-emotion';\nimport {Link} from 'gatsby';\nimport Img from 'gatsby-image';\nimport kebabCase from 'lodash/kebabCase';\nimport { hideS } from 'utilities';\n\nconst Wrapper = styled.article`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  margin-bottom: 4rem;\n`;\n\nconst Image = styled.div`\n  position: relative;\n  box-shadow: ${props => props.theme.shadow.feature.small.default};\n  transition: ${props => props.theme.transitions.boom.transition};\n  border-radius: ${props => props.theme.borderRadius.default};\n  min-height: 300px;\n  img {\n    border-radius: ${props => props.theme.borderRadius.default};\n  }\n  &:hover {\n    box-shadow: ${props => props.theme.shadow.feature.small.hover};\n    transform: translateY(-12px);\n  }\n  a {\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    > div {\n      position: static !important;\n    }\n    > div > div {\n      position: static !important;\n    }\n  }\n  flex-basis: calc(99.9% * 2 / 5 - 1rem);\n  max-width: calc(99.9% * 2 / 5 - 1rem);\n  width: calc(99.9% * 2 / 5 - 1rem);\n  @media (max-width: 800px) {\n    flex-basis: 100%;\n    max-width: 100%;\n    width: 100%;\n    margin-bottom: 1.5rem;\n  }\n  @media (max-width: 500px) {\n    min-height: 200px;\n  }\n`;\n\nconst Information = styled.div`\n  h1 {\n    font-size: 2rem;\n    margin-bottom: 1.25rem;\n    display: inline-block;\n    color: ${props => props.theme.colors.black.base};\n    transition: all ${props => props.theme.transitions.default.duration};\n    &:hover {\n      color: ${props => props.theme.colors.primary.base};\n    }\n  }\n\n  flex-basis: calc(99.9% * 3 / 5 - 1rem);\n  max-width: calc(99.9% * 3 / 5 - 1rem);\n  width: calc(99.9% * 3 / 5 - 1rem);\n  @media (max-width: 800px) {\n    flex-basis: 100%;\n    max-width: 100%;\n    width: 100%;\n  }\n`;\n\nconst Statistics = styled.div`\n  color: ${props => props.theme.colors.black.lighter};\n`;\n\nconst Excerpt = styled.div`\n  margin-top: 2rem;\n`;\n\nconst ItemBlog = ({ path, cover, category, title, date, timeToRead, excerpt }) => (\n  <Wrapper>\n    <Image>\n      <Link to={path}>\n        <Img fluid={cover} />\n      </Link>\n    </Image>\n    <Information>\n      <Link to={path}>\n        <h1>{title}</h1>\n      </Link>\n      <Statistics>\n        {date} &mdash; Lesezeit: {timeToRead} Min. &mdash; <span className={hideS}>Kategorie: </span>\n        <Link to={`/categories/${kebabCase(category)}`}>{category}</Link>\n      </Statistics>\n      <Excerpt>{excerpt}</Excerpt>\n    </Information>\n  </Wrapper>\n);\n\nexport default ItemBlog;\n\nItemBlog.propTypes = {\n  path: PropTypes.string.isRequired,\n  cover: PropTypes.any.isRequired,\n  category: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  timeToRead: PropTypes.number.isRequired,\n  excerpt: PropTypes.string.isRequired,\n};\n"],"sourceRoot":""}