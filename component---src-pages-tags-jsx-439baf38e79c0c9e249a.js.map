{"version":3,"sources":["webpack:///./src/pages/tags.jsx"],"names":["TagsContainer","Object","react_emotion__WEBPACK_IMPORTED_MODULE_3__","b","target","props","theme","tint","black","colors","light","borderRadius","default","polished__WEBPACK_IMPORTED_MODULE_6__","a","Number","lighter","Tags","_ref","_ref$data$allMarkdown","data","allMarkdownRemark","group","edges","react__WEBPACK_IMPORTED_MODULE_0___default","createElement","elements__WEBPACK_IMPORTED_MODULE_8__","c","react_helmet__WEBPACK_IMPORTED_MODULE_7___default","title","_config_website__WEBPACK_IMPORTED_MODULE_9___default","siteTitle","_components_Header__WEBPACK_IMPORTED_MODULE_11__","lodash_size__WEBPACK_IMPORTED_MODULE_5___default","map","tag","gatsby__WEBPACK_IMPORTED_MODULE_1__","Link","key","fieldValue","to","lodash_kebabCase__WEBPACK_IMPORTED_MODULE_4___default","totalCount","_components_Footer__WEBPACK_IMPORTED_MODULE_10__","__webpack_exports__","v","propTypes","prop_types__WEBPACK_IMPORTED_MODULE_2___default","shape","array","isRequired","pageQuery"],"mappings":"2SAaMA,EAAgBC,OAAAC,EAAAC,EAAAF,CAAhB,OAAAG,OAAA,aAAgBH,CAAhB,oFAMY,SAAAI,GAAA,OAASA,EAAMC,MAAMC,KAAKC,OANtC,UAOO,SAAAH,GAAA,OAASA,EAAMC,MAAMG,OAAOD,MAAME,OAPzC,0CASe,SAAAL,GAAA,OAASA,EAAMC,MAAMK,aAAaC,SATjD,wEAac,SAAAP,GAAA,OAASJ,OAAAY,EAAAC,EAAAb,CAAO,IAAMI,EAAMC,MAAMC,KAAKC,QAbrD,UAcS,SAAAH,GAAA,OAASJ,OAAAY,EAAAC,EAAAb,CAAO,IAAMI,EAAMC,MAAMG,OAAOD,MAAME,QAdxD,OAmBAK,EAASd,OAAAC,EAAAC,EAAAF,CAAT,QAAAG,OAAA,aAASH,CAAT,8CAGK,SAAAI,GAAA,OAASA,EAAMC,MAAMG,OAAOD,MAAMQ,SAHvC,KAMAC,EAAO,SAAAC,GAAA,IAAAC,EAAAD,EACXE,KACEC,kBAAqBC,EAFZH,EAEYG,MAAOC,EAFnBJ,EAEmBI,MAFnB,OAKXC,EAAAV,EAAAW,cAACC,EAAAC,EAAD,KACEH,EAAAV,EAAAW,cAACG,EAAAd,GAAOe,MAAA,UAAiBC,EAAAhB,EAAOiB,YAChCP,EAAAV,EAAAW,cAACO,EAAAlB,GAAOe,MAAM,QACXI,IAAKV,GADR,wBACqCU,IAAKX,GAD1C,kBAGAE,EAAAV,EAAAW,cAACC,EAAAZ,EAAD,KACEU,EAAAV,EAAAW,cAACzB,EAAD,KACGsB,EAAMY,IAAI,SAAAC,GAAA,OACTX,EAAAV,EAAAW,cAACW,EAAAC,MAAKC,IAAKH,EAAII,WAAYC,GAAA,SAAaC,IAAUN,EAAII,aACpDf,EAAAV,EAAAW,cAAA,YACGU,EAAII,WADP,IACmBf,EAAAV,EAAAW,cAACV,EAAD,KAASoB,EAAIO,kBAMxClB,EAAAV,EAAAW,cAACkB,EAAA7B,EAAD,QAIJ8B,EAAAhC,QAAAiC,EAEA5B,EAAK6B,WACH1B,KAAM2B,EAAAjC,EAAUkC,OACd3B,kBAAmB0B,EAAAjC,EAAUkC,OAC3B1B,MAAOyB,EAAAjC,EAAUmC,MAAMC,WACvB3B,MAAOwB,EAAAjC,EAAUmC,MAAMC,eAExBA,YAGE,IAAMC","file":"component---src-pages-tags-jsx-439baf38e79c0c9e249a.js","sourcesContent":["import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport styled from 'react-emotion';\nimport kebabCase from 'lodash/kebabCase';\nimport size from 'lodash/size';\nimport { darken } from 'polished';\nimport Helmet from 'react-helmet';\nimport { Container, Layout } from 'elements';\nimport config from '../../config/website';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\n\nconst TagsContainer = styled.div`\n  margin: 2rem 0 4rem 0;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  a {\n    background: ${props => props.theme.tint.black};\n    color: ${props => props.theme.colors.black.light};\n    padding: 0.25rem 0.85rem;\n    border-radius: ${props => props.theme.borderRadius.default};\n    margin: 0.3rem 0.6rem 0.3rem 0;\n    white-space: nowrap;\n    &:hover {\n      background: ${props => darken(0.35, props.theme.tint.black)};\n      color: ${props => darken(0.35, props.theme.colors.black.light)};\n    }\n  }\n`;\n\nconst Number = styled.span`\n  margin-left: 0.75rem;\n  font-size: 0.9rem;\n  color: ${props => props.theme.colors.black.lighter};\n`;\n\nconst Tags = ({\n  data: {\n    allMarkdownRemark: { group, edges },\n  },\n}) => (\n  <Layout>\n    <Helmet title={`Tags | ${config.siteTitle}`} />\n    <Header title=\"Tags\">\n      {size(edges)} Beitr√§ge wurden mit {size(group)} Tags markiert\n    </Header>\n    <Container>\n      <TagsContainer>\n        {group.map(tag => (\n          <Link key={tag.fieldValue} to={`/tags/${kebabCase(tag.fieldValue)}`}>\n            <span>\n              {tag.fieldValue} <Number>{tag.totalCount}</Number>\n            </span>\n          </Link>\n        ))}\n      </TagsContainer>\n    </Container>\n    <Footer />\n  </Layout>\n);\n\nexport default Tags;\n\nTags.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      group: PropTypes.array.isRequired,\n      edges: PropTypes.array.isRequired,\n    }),\n  }).isRequired,\n};\n\nexport const pageQuery = graphql`\n  query TagsPage {\n    allMarkdownRemark(filter: { fields: { sourceInstanceName: { eq: \"algorithm\" } } }) {\n      group(field: frontmatter___tags) {\n        fieldValue\n        totalCount\n      }\n      edges {\n        node {\n          id\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}