{"version":3,"sources":["webpack:///./src/components/Header.jsx","webpack:///./src/components/ItemProject.jsx","webpack:///./src/pages/hci.jsx"],"names":["Wrapper","props","theme","gradient","rightToLeft","big","breakpoints","m","s","Text","colors","white","base","layout","Subtitle","blue","Header","children","title","defaultProps","StyledLink","Link","borderRadius","default","primary","light","dark","shadow","feature","small","transitions","boom","transition","hover","ItemProject","cover","path","customer","fluid","to","Base","pageQuery","Hci","edges","data","allMarkdownRemark","Helmet","config","siteTitle","type","map","hci","key","node","frontmatter","fields","slug","childImageSharp","Footer"],"mappings":"2JAKMA,EAAO,0DACG,SAACC,GAAD,OAAWA,EAAMC,MAAMC,SAASC,cADnC,YAED,SAACH,GAAD,OAAYA,EAAMI,IAAM,QAAU,UAFjC,uBAGU,SAACJ,GAAD,OAAWA,EAAMC,MAAMI,YAAYC,IAH7C,aAIC,SAACN,GAAD,OAAYA,EAAMI,IAAM,QAAU,UAJnC,wBAMU,SAACJ,GAAD,OAAWA,EAAMC,MAAMI,YAAYE,IAN7C,aAOC,SAACP,GAAD,OAAYA,EAAMI,IAAM,QAAU,UAPnC,wCAaPI,EAAI,kDACC,SAACR,GAAD,OAAWA,EAAMC,MAAMQ,OAAOC,MAAMC,OADrC,8JAWK,SAACX,GAAD,OAAWA,EAAMC,MAAMW,OAAOD,OAXnC,0DAiBJE,EAAQ,gEAEH,SAACb,GAAD,OAAWA,EAAMC,MAAMQ,OAAOC,MAAMI,OAFjC,KAKRC,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,MAAOb,EAApB,EAAoBA,IAApB,OACb,YAACL,EAAD,CAASK,IAAKA,GACZ,YAACI,EAAD,KACE,sBAAKS,GACJD,GAAY,YAACH,EAAD,KAAWG,IAE1B,YAAC,IAAD,QAIWD,MAQfA,EAAOG,aAAe,CACpBd,KAAK,EACLY,UAAU,I,iOCrDNG,EAAa,YAAOC,OAAP,sBAAH,iEAMGnB,IAAMoB,aAAaC,QANtB,sHAW6BrB,IAAMQ,OAAOc,QAAQC,MAXlD,OAW+DvB,IAAMQ,OAAOc,QAAQE,KAXpF,gBAYLxB,IAAMQ,OAAOC,MAAMc,MAZd,sHAoBHvB,IAAMQ,OAAOC,MAAMc,MApBhB,MAwBVzB,EAAO,4GAIM,SAACC,GAAD,OAAWA,EAAMC,MAAMoB,aAAaC,UAJ1C,uDAOG,SAACtB,GAAD,OAAWA,EAAMC,MAAMyB,OAAOC,QAAQC,MAAMN,UAP/C,gBAQG,SAACtB,GAAD,OAAWA,EAAMC,MAAM4B,YAAYC,KAAKC,aAR3C,uBAUQ,SAAC/B,GAAD,OAAWA,EAAMC,MAAMoB,aAAaC,UAV5C,yBAaK,SAACtB,GAAD,OAAWA,EAAMC,MAAMyB,OAAOC,QAAQC,MAAMI,QAbjD,oEAgCEC,EAVK,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAMC,EAAhB,EAAgBA,SAAUnB,EAA1B,EAA0BA,MAA1B,OAClB,YAAClB,EAAD,KACE,YAAC,IAAD,CAAKsC,MAAOH,IACZ,YAACf,EAAD,CAAYmB,GAAIH,GACd,uBAAMC,GACN,sBAAKnB,M,wBC/CLsB,EAAI,4IA0CGC,GAVEC,UAzBH,SAAC,GAAD,IAEaC,EAFb,EACVC,KACEC,kBAAqBF,MAFb,OAKV,YAAC,IAAD,KACE,YAACG,EAAA,EAAD,CAAQ5B,MAAK,SAAW6B,IAAOC,YAC/B,YAAChC,EAAA,EAAD,CAAQE,MAAM,wBACd,YAAC,IAAD,CAAW+B,KAAK,OACd,YAACT,EAAD,KACGG,EAAMO,KAAI,SAACC,GAAD,OACT,YAAC,EAAD,CACEC,IAAKD,EAAIE,KAAKC,YAAYpC,MAC1BkB,KAAMe,EAAIE,KAAKE,OAAOC,KACtBrB,MAAOgB,EAAIE,KAAKC,YAAYnB,MAAMsB,gBAAgBnB,MAClDD,SAAUc,EAAIE,KAAKC,YAAYjB,SAC/BnB,MAAOiC,EAAIE,KAAKC,YAAYpC,aAKpC,YAACwC,EAAA,EAAD,QAckB","file":"component---src-pages-hci-jsx-3cfd91a22b0f28799fab.js","sourcesContent":["import React from 'react';\nimport styled from '@emotion/styled';\nimport PropTypes from 'prop-types';\nimport { Wave } from '../elements';\n\nconst Wrapper = styled.header`\n  background: ${(props) => props.theme.gradient.rightToLeft};\n  height: ${(props) => (props.big ? '650px' : '450px')};\n  @media (max-width: ${(props) => props.theme.breakpoints.m}) {\n    height: ${(props) => (props.big ? '600px' : '400px')};\n  }\n  @media (max-width: ${(props) => props.theme.breakpoints.s}) {\n    height: ${(props) => (props.big ? '500px' : '325px')};\n  }\n  position: relative;\n  overflow: hidden;\n`;\n\nconst Text = styled.div`\n  color: ${(props) => props.theme.colors.white.base};\n  z-index: 1000;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  width: 100%;\n  max-width: ${(props) => props.theme.layout.base};\n  padding: 0 2rem;\n  margin-bottom: 7rem;\n  align-items: center;\n`;\n\nconst Subtitle = styled.p`\n  max-width: 650px;\n  color: ${(props) => props.theme.colors.white.blue};\n`;\n\nconst Header = ({ children, title, big }) => (\n  <Wrapper big={big}>\n    <Text>\n      <h1>{title}</h1>\n      {children && <Subtitle>{children}</Subtitle>}\n    </Text>\n    <Wave />\n  </Wrapper>\n);\n\nexport default Header;\n\nHeader.propTypes = {\n  children: PropTypes.any,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\n  big: PropTypes.bool,\n};\n\nHeader.defaultProps = {\n  big: false,\n  children: false,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport Img from 'gatsby-image';\nimport styled from '@emotion/styled';\nimport theme from '../../config/theme';\n\nconst StyledLink = styled(Link)`\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  border-radius: ${theme.borderRadius.default};\n  display: flex;\n  flex-flow: column nowrap;\n  justify-content: flex-end;\n  padding: 1rem;\n  background-image: linear-gradient(30deg, ${theme.colors.primary.light} 0%, ${theme.colors.primary.dark} 100%);\n  color: ${theme.colors.white.light};\n  opacity: 0;\n  visibility: hidden;\n  transition: all 0.4s cubic-bezier(0.165, 0.84, 0.44, 1);\n  h2 {\n    margin-bottom: 0;\n  }\n  &:hover {\n    color: ${theme.colors.white.light};\n  }\n`;\n\nconst Wrapper = styled.div`\n  display: inline-block;\n  width: 100%;\n  position: relative;\n  border-radius: ${(props) => props.theme.borderRadius.default};\n  margin-top: 1.5rem;\n  margin-bottom: 1.5rem;\n  box-shadow: ${(props) => props.theme.shadow.feature.small.default};\n  transition: ${(props) => props.theme.transitions.boom.transition};\n  img {\n    border-radius: ${(props) => props.theme.borderRadius.default};\n  }\n  &:hover {\n    box-shadow: ${(props) => props.theme.shadow.feature.small.hover};\n    transform: translateY(-12px);\n    a {\n      visibility: visible;\n      opacity: 0.9;\n    }\n  }\n`;\n\nconst ItemProject = ({ cover, path, customer, title }) => (\n  <Wrapper>\n    <Img fluid={cover} />\n    <StyledLink to={path}>\n      <div>{customer}</div>\n      <h2>{title}</h2>\n    </StyledLink>\n  </Wrapper>\n);\n\nexport default ItemProject;\n\nItemProject.propTypes = {\n  cover: PropTypes.any.isRequired,\n  path: PropTypes.string.isRequired,\n  customer: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql } from 'gatsby';\nimport { Helmet } from 'react-helmet';\nimport styled from '@emotion/styled';\nimport { Container, Layout } from '../elements';\nimport config from '../../config/website';\nimport ItemProject from '../components/ItemProject';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\n\nconst Base = styled.div`\n  padding-top: 2rem;\n  padding-bottom: 2rem;\n  column-gap: 2rem;\n  column-width: 500px;\n`;\n\nconst Hci = ({\n  data: {\n    allMarkdownRemark: { edges },\n  },\n}) => (\n  <Layout>\n    <Helmet title={`HCI | ${config.siteTitle}`} />\n    <Header title=\"Next Generation HCI\" />\n    <Container type=\"big\">\n      <Base>\n        {edges.map((hci) => (\n          <ItemProject\n            key={hci.node.frontmatter.title}\n            path={hci.node.fields.slug}\n            cover={hci.node.frontmatter.cover.childImageSharp.fluid}\n            customer={hci.node.frontmatter.customer}\n            title={hci.node.frontmatter.title}\n          />\n        ))}\n      </Base>\n    </Container>\n    <Footer />\n  </Layout>\n);\n\nexport default Hci;\n\nHci.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      edges: PropTypes.array.isRequired,\n    }),\n  }).isRequired,\n};\n\nexport const pageQuery = graphql`\n  query HCIsQuery {\n    allMarkdownRemark(\n      limit: 1000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { fields: { sourceInstanceName: { eq: \"hci\" } } }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            customer\n            cover {\n              childImageSharp {\n                fluid(maxWidth: 900, quality: 90, traceSVG: { color: \"#2B2B2F\" }) {\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}