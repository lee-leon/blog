{"version":3,"sources":["webpack:///./src/components/Suggestions.jsx","webpack:///./src/components/Card.jsx","webpack:///./src/templates/hci.jsx","webpack:///./node_modules/core-js/modules/es6.string.link.js"],"names":["Row","ImageOverlay","props","theme","borderRadius","default","transitions","duration","primary","colors","light","dark","secondary","Wrapper","shadow","feature","small","boom","transition","hover","StyledLink","Link","Image","Title","white","base","text","Suggestions","left","right","src","frontmatter","cover","childImageSharp","resize","alt","title","to","fields","slug","defaultProps","generalStyle","brands","discord","instagram","yellow","pink","blue","behance","youtube","black","card","Card","propTypes","children","PropTypes","node","isRequired","pulse","keyframes","breakpoints","m","s","CardWrapper","pageQuery","Hci","pageContext","postNode","data","markdownRemark","post","fluid","id","postPath","postSEO","customer","task","time","type","input","html","aria-hidden","Footer","createHTML","url","this"],"mappings":"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","file":"component---src-templates-hci-jsx-7e6ba5cae587b4c67ec4.js","sourcesContent":["import React from 'react';\nimport styled from '@emotion/styled';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport theme from '../../config/theme';\n\nconst Row = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  margin-top: 2rem;\n  margin-bottom: 1rem;\n`;\n\nconst ImageOverlay = styled.div`\n  border-radius: ${(props) => props.theme.borderRadius.default};\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  z-index: 2;\n  opacity: 0;\n  transition: opacity ${(props) => props.theme.transitions.default.duration};\n  ${(props) =>\n    props.primary &&\n    `background-image: linear-gradient(\n    30deg,\n    ${props.theme.colors.primary.light} 0%,\n    ${props.theme.colors.primary.dark} 100%\n  )`};\n  ${(props) =>\n    props.secondary &&\n    `background-image: linear-gradient(\n    30deg,\n    ${props.theme.colors.secondary.light} 0%,\n    ${props.theme.colors.secondary.dark} 100%\n  )`};\n`;\n\nconst Wrapper = styled.article`\n  position: relative;\n  z-index: 100;\n  border-radius: ${(props) => props.theme.borderRadius.default};\n  box-shadow: ${(props) => props.theme.shadow.feature.small.default};\n  transition: ${(props) => props.theme.transitions.boom.transition};\n  height: 15rem;\n  &:hover {\n    box-shadow: ${(props) => props.theme.shadow.feature.small.hover};\n    transform: translateY(-12px);\n    ${ImageOverlay} {\n      opacity: 0.9;\n    }\n  }\n  flex-basis: calc(99.9% * 1 / 2 - 1rem);\n  max-width: calc(99.9% * 1 / 2 - 1rem);\n  width: calc(99.9% * 1 / 2 - 1rem);\n  @media (max-width: 800px) {\n    flex-basis: 100%;\n    max-width: 100%;\n    width: 100%;\n    height: 12rem;\n    &:first-child {\n      margin-bottom: 2rem;\n    }\n  }\n`;\n\nconst StyledLink = styled(Link)`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 1rem;\n  z-index: 3;\n  &:after {\n    content: '';\n    position: absolute;\n    display: block;\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: linear-gradient(\n      to bottom,\n      rgba(0, 0, 0, 0) 0%,\n      rgba(0, 0, 0, 0.42) 35%,\n      rgba(0, 0, 0, 0.52) 50%,\n      rgba(0, 0, 0, 0.42) 65%,\n      rgba(0, 0, 0, 0) 100%\n    );\n    z-index: -10;\n    border-radius: ${theme.borderRadius.default};\n    transition: opacity ${theme.transitions.default.duration};\n  }\n  &:hover {\n    &:after {\n      opacity: 0;\n    }\n  }\n`;\n\nconst Image = styled.div`\n  position: absolute;\n  top: 0;\n  overflow: hidden;\n  right: 0;\n  left: 0;\n  bottom: 0;\n  z-index: 1;\n  border-radius: ${(props) => props.theme.borderRadius.default};\n  img {\n    border-radius: ${(props) => props.theme.borderRadius.default};\n    object-fit: cover;\n    width: 100%;\n    height: 100%;\n  }\n`;\n\nconst Title = styled.h4`\n  color: ${(props) => props.theme.colors.white.base};\n  text-align: center;\n  margin-bottom: 0;\n  text-shadow: ${(props) => props.theme.shadow.text.small};\n`;\n\nconst Suggestions = ({ left, right, primary, secondary }) => (\n  <Row>\n    {left && (\n      <Wrapper>\n        <Image>\n          <img src={left.frontmatter.cover.childImageSharp.resize.src} alt={left.frontmatter.title} />\n        </Image>\n        <StyledLink to={left.fields.slug}>\n          <Title>{left.frontmatter.title}</Title>\n        </StyledLink>\n        <ImageOverlay primary={primary} secondary={secondary} />\n      </Wrapper>\n    )}\n\n    {right && (\n      <Wrapper>\n        <Image>\n          <img src={right.frontmatter.cover.childImageSharp.resize.src} alt={right.frontmatter.title} />\n        </Image>\n        <StyledLink to={right.fields.slug}>\n          <Title>{right.frontmatter.title}</Title>\n        </StyledLink>\n        <ImageOverlay primary={primary} secondary={secondary} />\n      </Wrapper>\n    )}\n  </Row>\n);\n\nexport default Suggestions;\n\nSuggestions.propTypes = {\n  left: PropTypes.any.isRequired,\n  right: PropTypes.any.isRequired,\n  primary: PropTypes.bool,\n  secondary: PropTypes.bool,\n};\n\nSuggestions.defaultProps = {\n  primary: true,\n  secondary: false,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { css, cx } from 'emotion';\nimport styled from '@emotion/styled';\nimport theme from '../../config/theme';\n\nconst discord = css`\n  svg {\n    fill: ${theme.colors.brands.discord};\n  }\n  &:hover {\n    background-color: ${theme.colors.brands.discord};\n    color: ${theme.colors.white.light};\n    svg {\n      fill: ${theme.colors.white.light};\n    }\n  }\n`;\n\nconst instagram = css`\n  &:after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: ${theme.colors.white.light};\n    z-index: -1;\n    opacity: 1;\n    border-radius: ${theme.borderRadius.default};\n    transition: opacity ${theme.transitions.default.duration};\n  }\n  &:before {\n    content: '';\n    background-color: ${theme.colors.white.light};\n    background-image: linear-gradient(\n      45deg,\n      ${theme.colors.brands.instagram.yellow} 0%,\n      ${theme.colors.brands.instagram.pink} 29%,\n      ${theme.colors.brands.instagram.blue} 100%\n    );\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    z-index: -1;\n    border-radius: ${theme.borderRadius.default};\n    opacity: 0;\n    transition: opacity ${theme.transitions.default.duration};\n  }\n  &:hover {\n    color: ${theme.colors.white.light};\n    svg {\n      fill: ${theme.colors.white.light};\n    }\n    &:before {\n      opacity: 1;\n    }\n    &:after {\n      opacity: 0;\n    }\n  }\n`;\n\nconst behance = css`\n  svg {\n    font-size: 3rem;\n  }\n  &:hover {\n    background-color: ${theme.colors.brands.behance};\n    color: ${theme.colors.white.light};\n    svg {\n      fill: ${theme.colors.white.light};\n    }\n  }\n`;\n\nconst youtube = css`\n  svg {\n    fill: ${theme.colors.brands.youtube};\n    font-size: 3rem;\n  }\n  &:hover {\n    background-color: ${theme.colors.brands.youtube};\n    color: ${theme.colors.white.light};\n    svg {\n      fill: ${theme.colors.white.light};\n    }\n  }\n`;\n\nconst generalStyle = css`\n  display: flex;\n  flex-direction: column;\n  padding: 2rem;\n  align-items: center;\n  color: ${theme.colors.black.base};\n  border-radius: ${theme.borderRadius.default};\n  box-shadow: ${theme.shadow.card};\n  position: relative;\n  transition: background-color ${theme.transitions.default.duration};\n  svg {\n    height: 4rem;\n    fill: ${theme.colors.black.blue};\n    margin-bottom: 0.5rem;\n  }\n  &:before {\n    content: '';\n    position: absolute;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    top: 0;\n    z-index: -1;\n    border-radius: ${theme.borderRadius.default};\n    background-color: ${theme.colors.white.light};\n  }\n`;\n\nconst Card = styled.div`\n  ${generalStyle};\n`;\n\nexport { Card };\n\nexport const LinkCard = (props) => {\n  const { children } = props;\n  // eslint-disable-next-line react/destructuring-assignment\n  const color = cx(generalStyle, props.className, {\n    // eslint-disable-next-line react/destructuring-assignment\n    [discord]: props.discord,\n    // eslint-disable-next-line react/destructuring-assignment\n    [instagram]: props.instagram,\n    // eslint-disable-next-line react/destructuring-assignment\n    [behance]: props.behance,\n    // eslint-disable-next-line react/destructuring-assignment\n    [youtube]: props.youtube,\n  });\n  return (\n    // eslint-disable-next-line react/destructuring-assignment\n    <a href={props.link} rel=\"noreferrer noopener\" target=\"_blank\" className={color}>\n      {children}\n    </a>\n  );\n};\n\nCard.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nLinkCard.propTypes = {\n  children: PropTypes.node.isRequired,\n  link: PropTypes.string.isRequired,\n  className: PropTypes.string,\n  discord: PropTypes.bool,\n  instagram: PropTypes.bool,\n  behance: PropTypes.bool,\n  youtube: PropTypes.bool,\n};\n\nLinkCard.defaultProps = {\n  discord: false,\n  instagram: false,\n  behance: false,\n  youtube: false,\n  className: 'default',\n};\n","/* eslint max-len: 0 */\n/* eslint react/no-unescaped-entities: 0 */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from '@emotion/styled';\nimport { keyframes } from '@emotion/core';\nimport Img from 'gatsby-image';\nimport { graphql } from 'gatsby';\nimport { SEO, Container, Content, Line, Wave, Layout } from '../elements';\nimport { Hero, InfoText } from '../utilities';\nimport Suggestions from '../components/Suggestions';\nimport { Card } from '../components/Card';\n// import Button from '../components/Button';\nimport Footer from '../components/Footer';\n\nconst pulse = keyframes`\n  0% {\n    transform: scale(1);\n    animation-timing-function: ease-in;\n  }\n  25% {\n    animation-timing-function: ease-out;\n    transform: scale(1.05);\n  }\n  50% {\n    transform: scale(1.12);\n    animation-timing-function: ease-in;\n  }\n  to {\n    transform: scale(1);\n    animation-timing-function: ease-out;\n  }\n`;\n\nconst Wrapper = styled.div`\n  height: 600px;\n  position: relative;\n  overflow: hidden;\n  .gatsby-image-wrapper {\n    height: 600px;\n    img {\n      animation: ${pulse} 30s infinite;\n    }\n  }\n  @media (max-width: ${(props) => props.theme.breakpoints.m}) {\n    height: 500px;\n    .gatsby-image-wrapper {\n      height: 500px;\n    }\n  }\n  @media (max-width: ${(props) => props.theme.breakpoints.s}) {\n    height: 400px;\n    .gatsby-image-wrapper {\n      height: 400px;\n    }\n  }\n`;\n\nconst CardWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  ${Card} {\n    color: ${(props) => props.theme.colors.black.base} !important;\n    margin-bottom: 2rem;\n    text-align: center;\n    flex-basis: calc(99.9% * 1 / 3 - 1rem);\n    max-width: calc(99.9% * 1 / 3 - 1rem);\n    width: calc(99.9% * 1 / 3 - 1rem);\n    @media (max-width: 750px) {\n      flex-basis: 100%;\n      max-width: 100%;\n      width: 100%;\n      margin-bottom: 1.5rem;\n    }\n  }\n`;\n\n// eslint-disable-next-line react/prop-types\nconst Hci = ({ pageContext: { slug, left, right }, data: { markdownRemark: postNode } }) => {\n  const post = postNode.frontmatter;\n  const { fluid } = post.cover.childImageSharp;\n  if (!post.id) {\n    post.id = slug;\n  }\n  return (\n    <Layout>\n      <SEO postPath={slug} postNode={postNode} postSEO />\n      <Wrapper>\n        <Hero>\n          <h1>{post.title}</h1>\n        </Hero>\n        <Wave />\n        <Img fluid={fluid} />\n      </Wrapper>\n      <Container>\n        <CardWrapper>\n          <Card>\n            <h2>Objective</h2>\n            {post.customer}\n          </Card>\n          <Card>\n            <h2>Task</h2>\n            {post.task}\n          </Card>\n          <Card>\n            <h2>Time</h2>\n            {post.time}\n          </Card>\n        </CardWrapper>\n      </Container>\n      <Container type=\"article\">\n        <Content input={postNode.html} />\n      </Container>\n      <Container>\n        <Line aria-hidden=\"true\" />\n        <InfoText>Related Reading</InfoText>\n        <Suggestions left={left} right={right} />\n      </Container>\n      <Footer />\n    </Layout>\n  );\n};\n\nexport default Hci;\n\nHci.propTypes = {\n  pageContext: PropTypes.shape({\n    slug: PropTypes.string.isRequired,\n  }).isRequired,\n  data: PropTypes.shape({\n    markdownRemark: PropTypes.object.isRequired,\n  }).isRequired,\n};\n\nexport const pageQuery = graphql`\n  query HCIPostBySlug($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        customer\n        task\n        time\n        cover {\n          childImageSharp {\n            fluid(maxWidth: 1920, quality: 90, duotone: { highlight: \"#5ABDFF\", shadow: \"#3466DB\" }) {\n              ...GatsbyImageSharpFluid_withWebp\n            }\n            resize(width: 1200, quality: 90) {\n              src\n            }\n          }\n        }\n      }\n      fields {\n        slug\n        sourceInstanceName\n      }\n    }\n  }\n`;\n","'use strict';\n// B.2.3.10 String.prototype.link(url)\nrequire('./_string-html')('link', function (createHTML) {\n  return function link(url) {\n    return createHTML(this, 'a', 'href', url);\n  };\n});\n"],"sourceRoot":""}